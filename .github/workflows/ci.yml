name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      - name: Installation
        run: |
          npm ci
      - name: Linting
        run: |
          npm run lint

  test-unit:
    name: Unit testing on Node/${{ matrix.package-manager }} ${{ matrix.node-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14, 16]
        package-manager: [npm, yarn]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      - name: Installation
        run: |
          npm i -g npm
          npm ci
      - name: Remove yarnpkg
        if: ${{ matrix.package-manager == 'npm' }}
        run: |
          rm $(which yarn)
          rm $(which yarnpkg)
      - name: Unit testing
        run: |
          npm run test:all
          npm run badge
      - name: Coveralls action
        uses: coverallsapp/github-action@1.1.3
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.package-manager == 'npm' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: Node ${{ matrix.node-version }} ${{ matrix.os }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.package-manager == 'npm' }}
        with:
          name: badges
          path: build

  test-e2e:
    name: E2E testing on Node/${{ matrix.package-manager }} ${{ matrix.node-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14, 16]
        package-manager: [npm, yarn]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Reattach HEAD to head ref
        run: git switch -C "$(echo ${{ github.head_ref }} | sed -E 's|refs/[a-zA-Z]+/||')"
        if: ${{ github.head_ref != '' }}
      - name: Reattach HEAD to ref
        run: git switch -C "$(echo ${{ github.ref }} | sed -E 's|refs/[a-zA-Z]+/||')"
        if: ${{ github.head_ref == '' }}
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      - name: Installation
        run: |
          npm i -g npm
          npm ci
      - name: Remove yarnpkg
        if: ${{ matrix.package-manager == 'npm' }}
        run: |
          rm $(which yarn)
          rm $(which yarnpkg)
      - name: E2E testing
        run: |
          npm run e2e
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        if: ${{ matrix.node-version == 16 && matrix.os == 'ubuntu-latest' && matrix.package-manager == 'npm' }}
        with:
          name: demos
          path: build

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      - name: Build documentation
        run: |
          cd website/
          npm ci
          npm run build
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: build

  publish:
    name: Publish
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-e2e]
    steps:
      - name: Initialize git configuration
        run: |
          git config --global core.autocrlf false
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Reattach HEAD to head ref
        run: git switch -C "$(echo ${{ github.head_ref }} | sed -E 's|refs/[a-zA-Z]+/||')"
        if: ${{ github.head_ref != '' }}
      - name: Reattach HEAD to ref
        run: git switch -C "$(echo ${{ github.ref }} | sed -E 's|refs/[a-zA-Z]+/||')"
        if: ${{ github.head_ref == '' }}
      - name: Setup Node environment
        uses: actions/setup-node@v2
        with:
          node-version: 16
          architecture: x64
          registry-url: https://registry.npmjs.org/
          cache: 'npm'
      - name: Installation
        run: |
          npm ci
      - name: Building work
        run: |
          npm run build
      - name: Publish to NPM registry
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NODE_AUTH_TOKEN}" >> .npmrc
          npx lerna publish from-package --no-verify-access --ignore-scripts --yes
        env:
          NPM_CONFIG_USERCONFIG: .npmrc
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy:
    name: Deployment
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: [lint, test-unit, test-e2e, docs]
    steps:
      - name: Download production artifacts
        uses: actions/download-artifact@v2
      - name: List production artifacts
        run: |
          ls -R
        working-directory: .
      - name: Aggregate production artifacts
        run: |
          mkdir -p ./build/
          cp -fr badges/* ./build/
          cp -fr demos/* ./build/
          cp -fr docs/* ./build/
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          force_orphan: true
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}
